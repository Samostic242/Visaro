## Autogenerated by Scribe. DO NOT MODIFY.

name: Merchant
description: '* @subgroup Verification'
endpoints:
  -
    httpMethods:
      - POST
    uri: api/v2/merchant/onboarding/email
    metadata:
      groupName: Merchant
      groupDescription: ''
      subgroup: Onboarding
      subgroupDescription: ''
      title: "Sends an Otp to the merchant's Mail"
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      business_email:
        name: business_email
        description: 'Must be a valid email address.'
        required: true
        example: obeier@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      business_phone_code:
        name: business_phone_code
        description: 'Must match the regex /^\+[0-9]+$/. Must not be greater than 4 characters.'
        required: true
        example: hr
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      business_phone:
        name: business_phone
        description: 'Must match the regex /[0-9]{10}$/.'
        required: true
        example: '9439101339'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      business_email: obeier@example.net
      business_phone_code: hr
      business_phone: '9439101339'
    fileParameters: []
    responses:
      -
        status: 422
        content: '{"message":"The business phone code format is invalid.","errors":{"business_phone_code":["The business phone code format is invalid."]}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/merchant/onboarding/verifications/verify-email-otp
    metadata:
      groupName: Merchant
      groupDescription: '* @subgroup Verification'
      subgroup: ''
      subgroupDescription: ''
      title: 'Verifies Merchant Otp'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      code:
        name: code
        description: ''
        required: true
        example: aspernatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      business_email:
        name: business_email
        description: ''
        required: true
        example: officia
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      code: aspernatur
      business_email: officia
    fileParameters: []
    responses:
      -
        status: 422
        content: '{"message":"The selected business email is invalid.","errors":{"business_email":["The selected business email is invalid."]}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/merchant/compliance/create
    metadata:
      groupName: Merchant
      groupDescription: ''
      subgroup: Compliance
      subgroupDescription: ''
      title: 'Create a compliance for a merchant'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      cac_number:
        name: cac_number
        description: ''
        required: false
        example: maiores
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      cac_document:
        name: cac_document
        description: 'Must be a file.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        custom: []
      proof_of_address:
        name: proof_of_address
        description: 'Must be a file.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        custom: []
      country_id:
        name: country_id
        description: ''
        required: false
        example: 14
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      state:
        name: state
        description: ''
        required: false
        example: ut
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      local_government:
        name: local_government
        description: ''
        required: false
        example: ea
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      city:
        name: city
        description: ''
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      street_address:
        name: street_address
        description: ''
        required: false
        example: facere
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      land_mark:
        name: land_mark
        description: ''
        required: false
        example: est
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      meta:
        name: meta
        description: ''
        required: false
        example: non
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      cac_number: maiores
      country_id: 14
      state: ut
      local_government: ea
      city: architecto
      street_address: facere
      land_mark: est
      meta: non
    fileParameters:
      cac_document: null
      proof_of_address: null
    responses:
      -
        status: 401
        content: '{"api_status":"401","message":"Unauthorized"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: api/v2/merchant/compliance/update
    metadata:
      groupName: Merchant
      groupDescription: ''
      subgroup: Compliance
      subgroupDescription: ''
      title: 'Update the compliance for a merchant'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      payout_interval:
        name: payout_interval
        description: ''
        required: true
        example: daily
        type: string
        enumValues:
          - daily
          - weekly
          - monthly
        exampleWasSpecified: false
        custom: []
      payout_frequency:
        name: payout_frequency
        description: ''
        required: true
        example: 13
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      meta:
        name: meta
        description: ''
        required: false
        example: null
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      payout_interval: daily
      payout_frequency: 13
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"api_status":"401","message":"Unauthorized"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/merchant/settings/create
    metadata:
      groupName: Merchant
      groupDescription: ''
      subgroup: 'Merchant Settings'
      subgroupDescription: ''
      title: 'Create Merchant Settings'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      dispute_email:
        name: dispute_email
        description: ''
        required: false
        example: quentin.ryan@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      support_email:
        name: support_email
        description: ''
        required: false
        example: annie.brown@example.org
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      general_mail:
        name: general_mail
        description: ''
        required: false
        example: repudiandae
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      meta:
        name: meta
        description: ''
        required: false
        example: earum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      dispute_email: quentin.ryan@example.net
      support_email: annie.brown@example.org
      general_mail: repudiandae
      meta: earum
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"api_status":"401","message":"Unauthorized"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/merchant/settings/update
    metadata:
      groupName: Merchant
      groupDescription: ''
      subgroup: 'Merchant Settings'
      subgroupDescription: ''
      title: 'Update Merchant Settings'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      dispute_email:
        name: dispute_email
        description: 'Must be a valid email address.'
        required: false
        example: lazaro58@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      support_email:
        name: support_email
        description: 'Must be a valid email address.'
        required: false
        example: napoleon41@example.org
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      general_email:
        name: general_email
        description: 'Must be a valid email address.'
        required: false
        example: else00@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      meta:
        name: meta
        description: ''
        required: false
        example: harum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      active:
        name: active
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
      status:
        name: status
        description: ''
        required: false
        example: recusandae
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      dispute_email: lazaro58@example.com
      support_email: napoleon41@example.org
      general_email: else00@example.net
      meta: harum
      active: true
      status: recusandae
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"api_status":"401","message":"Unauthorized"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/merchant/preference/create
    metadata:
      groupName: Merchant
      groupDescription: ''
      subgroup: 'Merchant Settings'
      subgroupDescription: ''
      title: 'Create Merchant Preference'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      default_currency:
        name: default_currency
        description: ''
        required: false
        example: necessitatibus
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      bank:
        name: bank
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
      card:
        name: card
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
      qr:
        name: qr
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
      transfer:
        name: transfer
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
      installment:
        name: installment
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      default_currency: necessitatibus
      bank: false
      card: true
      qr: false
      transfer: true
      installment: false
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"api_status":"401","message":"Unauthorized"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/merchant/preference/update
    metadata:
      groupName: Merchant
      groupDescription: ''
      subgroup: 'Merchant Settings'
      subgroupDescription: ''
      title: 'Update Merchant Preference'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      default_currency:
        name: default_currency
        description: ''
        required: false
        example: nostrum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      bank:
        name: bank
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
      card:
        name: card
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
      qr:
        name: qr
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
      transfer:
        name: transfer
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
      installment:
        name: installment
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      default_currency: nostrum
      bank: false
      card: true
      qr: true
      transfer: false
      installment: false
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"api_status":"401","message":"Unauthorized"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/merchant/bank/create
    metadata:
      groupName: Merchant
      groupDescription: ''
      subgroup: 'Merchant Settings'
      subgroupDescription: ''
      title: 'Add Merchant BankAccount'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      bank_name:
        name: bank_name
        description: ''
        required: true
        example: omnis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      bank_code:
        name: bank_code
        description: ''
        required: true
        example: rerum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      account_name:
        name: account_name
        description: ''
        required: true
        example: officia
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      account_number:
        name: account_number
        description: ''
        required: true
        example: modi
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      currency:
        name: currency
        description: ''
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      bank_name: omnis
      bank_code: rerum
      account_name: officia
      account_number: modi
      currency: et
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"api_status":"401","message":"Unauthorized"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/merchant/bank/update
    metadata:
      groupName: Merchant
      groupDescription: ''
      subgroup: 'Merchant Settings'
      subgroupDescription: ''
      title: 'Update Merchant BankAccount'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      bank_name:
        name: bank_name
        description: ''
        required: false
        example: omnis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      bank_code:
        name: bank_code
        description: ''
        required: false
        example: ut
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      account_name:
        name: account_name
        description: ''
        required: false
        example: animi
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      account_number:
        name: account_number
        description: ''
        required: false
        example: ab
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      currency:
        name: currency
        description: ''
        required: false
        example: quas
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      active:
        name: active
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
      status:
        name: status
        description: ''
        required: false
        example: iure
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      bank_name: omnis
      bank_code: ut
      account_name: animi
      account_number: ab
      currency: quas
      active: true
      status: iure
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"api_status":"401","message":"Unauthorized"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/merchant/merchant/account/profile
    metadata:
      groupName: Merchant
      groupDescription: ''
      subgroup: Account
      subgroupDescription: ''
      title: 'Fetch Merchant profile'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"api_status":"401","message":"Unauthorized"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/merchant/merchant/account/update
    metadata:
      groupName: Merchant
      groupDescription: ''
      subgroup: Onboarding
      subgroupDescription: ''
      title: 'Update the merchant data'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      business_name:
        name: business_name
        description: ''
        required: false
        example: optio
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      business_type:
        name: business_type
        description: ''
        required: false
        example: partnership
        type: string
        enumValues:
          - corporation
          - sole_proprietorship
          - partnership
        exampleWasSpecified: false
        custom: []
      business_email:
        name: business_email
        description: 'Must be a valid email address.'
        required: false
        example: deborah67@example.org
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      business_phone_code:
        name: business_phone_code
        description: ''
        required: false
        example: iusto
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      business_phone:
        name: business_phone
        description: ''
        required: false
        example: quasi
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      business_registration_number:
        name: business_registration_number
        description: ''
        required: false
        example: cupiditate
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      acronym:
        name: acronym
        description: ''
        required: false
        example: voluptas
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      official_name:
        name: official_name
        description: ''
        required: false
        example: aut
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      website:
        name: website
        description: 'Must be a valid URL.'
        required: false
        example: 'http://www.oconner.org/aliquam-ea-dolorum-rerum-aperiam-pariatur-dolorem-ut'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      presence:
        name: presence
        description: ''
        required: false
        example: virtual
        type: string
        enumValues:
          - physical
          - virtual
          - hybrid
        exampleWasSpecified: false
        custom: []
      logo:
        name: logo
        description: 'Must be an image. Must not be greater than 2048 kilobytes.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        custom: []
      country_id:
        name: country_id
        description: ''
        required: false
        example: 9
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      customization:
        name: customization
        description: ''
        required: false
        example: null
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      meta:
        name: meta
        description: ''
        required: false
        example: null
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      business_name: optio
      business_type: partnership
      business_email: deborah67@example.org
      business_phone_code: iusto
      business_phone: quasi
      business_registration_number: cupiditate
      acronym: voluptas
      official_name: aut
      website: 'http://www.oconner.org/aliquam-ea-dolorum-rerum-aperiam-pariatur-dolorem-ut'
      presence: virtual
      country_id: 9
    fileParameters:
      logo: null
    responses:
      -
        status: 401
        content: '{"api_status":"401","message":"Unauthorized"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/merchant/auth/forgot-password
    metadata:
      groupName: Merchant
      groupDescription: ''
      subgroup: Account
      subgroupDescription: ''
      title: 'Initiate merchant password reset'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      business_email:
        name: business_email
        description: 'Must be a valid email address.'
        required: true
        example: luciano.kautzer@example.org
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      business_email: luciano.kautzer@example.org
    fileParameters: []
    responses:
      -
        status: 422
        content: '{"message":"The selected business email is invalid.","errors":{"business_email":["The selected business email is invalid."]}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/merchant/auth/reset-password
    metadata:
      groupName: Merchant
      groupDescription: ''
      subgroup: Account
      subgroupDescription: ''
      title: 'Complete merchant password reset'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      business_email:
        name: business_email
        description: 'Must be a valid email address.'
        required: true
        example: fay.damian@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      code:
        name: code
        description: 'Must match the regex /[0-9]{4}/.'
        required: true
        example: '7711'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: "X,1'1o52|g8"
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      business_email: fay.damian@example.com
      code: '7711'
      password: "X,1'1o52|g8"
    fileParameters: []
    responses:
      -
        status: 422
        content: '{"message":"The selected business email is invalid.","errors":{"business_email":["The selected business email is invalid."]}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
