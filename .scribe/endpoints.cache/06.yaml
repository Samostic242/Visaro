## Autogenerated by Scribe. DO NOT MODIFY.

name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v2/commerce/order
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"api_status":"401","message":"Unauthorized"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/commerce/order/{order_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      order_id:
        name: order_id
        description: 'The ID of the order.'
        required: true
<<<<<<< HEAD
        example: dignissimos
=======
        example: dolorum
>>>>>>> 7c2bc70a5b335d2dcf8e0ab5201e3c0c7ab9ee3f
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
<<<<<<< HEAD
      order_id: dignissimos
=======
      order_id: dolorum
>>>>>>> 7c2bc70a5b335d2dcf8e0ab5201e3c0c7ab9ee3f
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"api_status":"401","message":"Unauthorized"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/commerce/order
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      invoice_id:
        name: invoice_id
        description: ''
        required: false
<<<<<<< HEAD
        example: ducimus
=======
        example: explicabo
>>>>>>> 7c2bc70a5b335d2dcf8e0ab5201e3c0c7ab9ee3f
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      merchant_id:
        name: merchant_id
        description: ''
        required: false
<<<<<<< HEAD
        example: voluptatem
=======
        example: aut
>>>>>>> 7c2bc70a5b335d2dcf8e0ab5201e3c0c7ab9ee3f
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      transaction_id:
        name: transaction_id
        description: ''
        required: false
<<<<<<< HEAD
        example: quis
=======
        example: veniam
>>>>>>> 7c2bc70a5b335d2dcf8e0ab5201e3c0c7ab9ee3f
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      user_id:
        name: user_id
        description: ''
        required: false
<<<<<<< HEAD
        example: est
=======
        example: dolorem
>>>>>>> 7c2bc70a5b335d2dcf8e0ab5201e3c0c7ab9ee3f
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      store_front_id:
        name: store_front_id
        description: ''
        required: false
<<<<<<< HEAD
        example: aperiam
=======
        example: et
>>>>>>> 7c2bc70a5b335d2dcf8e0ab5201e3c0c7ab9ee3f
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
<<<<<<< HEAD
      invoice_id: ducimus
      merchant_id: voluptatem
      transaction_id: quis
      user_id: est
      store_front_id: aperiam
=======
      invoice_id: explicabo
      merchant_id: aut
      transaction_id: veniam
      user_id: dolorem
      store_front_id: et
>>>>>>> 7c2bc70a5b335d2dcf8e0ab5201e3c0c7ab9ee3f
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"api_status":"401","message":"Unauthorized"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/v2/commerce/order/{order_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      order_id:
        name: order_id
        description: 'The ID of the order.'
        required: true
<<<<<<< HEAD
        example: velit
=======
        example: dolor
>>>>>>> 7c2bc70a5b335d2dcf8e0ab5201e3c0c7ab9ee3f
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
<<<<<<< HEAD
      order_id: velit
=======
      order_id: dolor
>>>>>>> 7c2bc70a5b335d2dcf8e0ab5201e3c0c7ab9ee3f
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      status:
        name: status
        description: ''
        required: false
<<<<<<< HEAD
        example: cancelled
=======
        example: processing
>>>>>>> 7c2bc70a5b335d2dcf8e0ab5201e3c0c7ab9ee3f
        type: string
        enumValues:
          - created
          - processing
          - cancelled
        exampleWasSpecified: false
        custom: []
      active:
        name: active
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
<<<<<<< HEAD
      status: cancelled
=======
      status: processing
>>>>>>> 7c2bc70a5b335d2dcf8e0ab5201e3c0c7ab9ee3f
      active: true
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"api_status":"401","message":"Unauthorized"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/commerce/store-fronts
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"api_status":"401","message":"Unauthorized"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/commerce/store-fronts/{store_front_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      store_front_id:
        name: store_front_id
        description: 'The ID of the store front.'
        required: true
<<<<<<< HEAD
        example: officia
=======
        example: accusantium
>>>>>>> 7c2bc70a5b335d2dcf8e0ab5201e3c0c7ab9ee3f
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
<<<<<<< HEAD
      store_front_id: officia
=======
      store_front_id: accusantium
>>>>>>> 7c2bc70a5b335d2dcf8e0ab5201e3c0c7ab9ee3f
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"api_status":"401","message":"Unauthorized"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/commerce/store-fronts
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      merchant_id:
        name: merchant_id
        description: ''
        required: false
<<<<<<< HEAD
        example: in
=======
        example: distinctio
>>>>>>> 7c2bc70a5b335d2dcf8e0ab5201e3c0c7ab9ee3f
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      name:
        name: name
        description: ''
        required: false
<<<<<<< HEAD
        example: necessitatibus
=======
        example: totam
>>>>>>> 7c2bc70a5b335d2dcf8e0ab5201e3c0c7ab9ee3f
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      logo:
        name: logo
        description: 'Must be an image. Must not be greater than 2048 kilobytes.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        custom: []
      cover_image:
        name: cover_image
        description: 'Must be an image. Must not be greater than 2048 kilobytes.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
<<<<<<< HEAD
      merchant_id: in
      name: necessitatibus
=======
      merchant_id: distinctio
      name: totam
>>>>>>> 7c2bc70a5b335d2dcf8e0ab5201e3c0c7ab9ee3f
    fileParameters:
      logo: null
      cover_image: null
    responses:
      -
        status: 401
        content: '{"api_status":"401","message":"Unauthorized"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/commerce/store-fronts/{store_front_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      store_front_id:
        name: store_front_id
        description: 'The ID of the store front.'
        required: true
<<<<<<< HEAD
        example: sunt
=======
        example: ipsa
>>>>>>> 7c2bc70a5b335d2dcf8e0ab5201e3c0c7ab9ee3f
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
<<<<<<< HEAD
      store_front_id: sunt
=======
      store_front_id: ipsa
>>>>>>> 7c2bc70a5b335d2dcf8e0ab5201e3c0c7ab9ee3f
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      merchant_id:
        name: merchant_id
        description: ''
        required: false
<<<<<<< HEAD
        example: minima
=======
        example: quidem
>>>>>>> 7c2bc70a5b335d2dcf8e0ab5201e3c0c7ab9ee3f
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      name:
        name: name
        description: ''
        required: false
<<<<<<< HEAD
        example: delectus
=======
        example: nemo
>>>>>>> 7c2bc70a5b335d2dcf8e0ab5201e3c0c7ab9ee3f
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      logo:
        name: logo
        description: 'Must be an image. Must not be greater than 2048 kilobytes.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        custom: []
      cover_image:
        name: cover_image
        description: 'Must be an image. Must not be greater than 2048 kilobytes.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        custom: []
      status:
        name: status
        description: ''
        required: false
<<<<<<< HEAD
        example: qui
=======
        example: et
>>>>>>> 7c2bc70a5b335d2dcf8e0ab5201e3c0c7ab9ee3f
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      active:
        name: active
        description: ''
        required: false
<<<<<<< HEAD
        example: false
=======
        example: true
>>>>>>> 7c2bc70a5b335d2dcf8e0ab5201e3c0c7ab9ee3f
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
<<<<<<< HEAD
      merchant_id: minima
      name: delectus
      status: qui
      active: false
=======
      merchant_id: quidem
      name: nemo
      status: et
      active: true
>>>>>>> 7c2bc70a5b335d2dcf8e0ab5201e3c0c7ab9ee3f
    fileParameters:
      logo: null
      cover_image: null
    responses:
      -
        status: 401
        content: '{"api_status":"401","message":"Unauthorized"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/commerce/store-fronts/{store_front_id}/products'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      store_front_id:
        name: store_front_id
        description: 'The ID of the store front.'
        required: true
<<<<<<< HEAD
        example: voluptatem
=======
        example: tenetur
>>>>>>> 7c2bc70a5b335d2dcf8e0ab5201e3c0c7ab9ee3f
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
<<<<<<< HEAD
      store_front_id: voluptatem
=======
      store_front_id: tenetur
>>>>>>> 7c2bc70a5b335d2dcf8e0ab5201e3c0c7ab9ee3f
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"api_status":"401","message":"Unauthorized"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/commerce/store-fronts/{store_front_id}/products/add'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      store_front_id:
        name: store_front_id
        description: 'The ID of the store front.'
        required: true
<<<<<<< HEAD
        example: amet
=======
        example: sed
>>>>>>> 7c2bc70a5b335d2dcf8e0ab5201e3c0c7ab9ee3f
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
<<<<<<< HEAD
      store_front_id: amet
=======
      store_front_id: sed
>>>>>>> 7c2bc70a5b335d2dcf8e0ab5201e3c0c7ab9ee3f
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      product_id:
        name: product_id
        description: ''
        required: false
<<<<<<< HEAD
        example: iure
=======
        example: dolor
>>>>>>> 7c2bc70a5b335d2dcf8e0ab5201e3c0c7ab9ee3f
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
<<<<<<< HEAD
      product_id: iure
=======
      product_id: dolor
>>>>>>> 7c2bc70a5b335d2dcf8e0ab5201e3c0c7ab9ee3f
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"api_status":"401","message":"Unauthorized"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/commerce/store-fronts/{store_front_id}/order'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      store_front_id:
        name: store_front_id
        description: 'The ID of the store front.'
        required: true
<<<<<<< HEAD
        example: deleniti
=======
        example: praesentium
>>>>>>> 7c2bc70a5b335d2dcf8e0ab5201e3c0c7ab9ee3f
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
<<<<<<< HEAD
      store_front_id: deleniti
=======
      store_front_id: praesentium
>>>>>>> 7c2bc70a5b335d2dcf8e0ab5201e3c0c7ab9ee3f
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"api_status":"401","message":"Unauthorized"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
